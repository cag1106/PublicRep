Description: Upstream changes introduced in version 5.6.1-4
 This patch has been created by dpkg-source during the package build.
 Here's the last changelog entry, hopefully it gives details on why
 those changes were made:
 .
 vtk (5.6.1-4) unstable; urgency=low
 .
   * vtkEncodeString is in /usr/lib/vtk-5.6 (Closes: #618519)
   * replace doxygen and texlive build dependencies with doxygen-latex
    (Closes: #616284)
   * Re-apply commit 4e1dd55 which had not been merged into 5.6.0.
     Added Break and Replace control fields (Closes: #601992, #601994)
 .
 The person named in the Author field signed this changelog entry.
Author: Dominique Belhachemi <domibel@debian.org>
Bug-Debian: http://bugs.debian.org/601992
Bug-Debian: http://bugs.debian.org/601994
Bug-Debian: http://bugs.debian.org/616284
Bug-Debian: http://bugs.debian.org/618519

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

Index: vtk-5.8.0/vtkGenerateVTKConfig.cmake
===================================================================
--- vtk-5.8.0.orig/vtkGenerateVTKConfig.cmake	2011-09-01 15:48:13.000000000 +0200
+++ vtk-5.8.0/vtkGenerateVTKConfig.cmake	2011-09-01 15:49:34.000000000 +0200
@@ -240,7 +240,7 @@
   SET(VTK_WRAP_JAVA_EXE_CONFIG ${DOLLAR}{VTK_INSTALL_PREFIX}${VTK_INSTALL_BIN_DIR}/vtkWrapJava${VTK_EXE_EXT})
   SET(VTK_JAVA_JAR_CONFIG ${DOLLAR}{VTK_INSTALL_PREFIX}${VTK_INSTALL_JAVA_DIR}/vtk.jar)
 ENDIF(VTK_WRAP_JAVA)
-SET(VTK_ENCODESTRING_EXE_CONFIG ${DOLLAR}{VTK_INSTALL_PREFIX}${VTK_INSTALL_BIN_DIR}/vtkEncodeString${VTK_EXE_EXT})
+SET(VTK_ENCODESTRING_EXE_CONFIG ${DOLLAR}{VTK_INSTALL_PREFIX}${VTK_INSTALL_LIB_DIR}/vtkEncodeString${VTK_EXE_EXT})
 
 # VTK style script locations.
 SET(VTK_DOXYGEN_HOME_CONFIG ${DOLLAR}{VTK_INSTALL_PREFIX}${VTK_INSTALL_DOXYGEN_DIR})
Index: vtk-5.8.0/CMake/KitCommonPythonWrapBlock.cmake
===================================================================
--- vtk-5.8.0.orig/CMake/KitCommonPythonWrapBlock.cmake	2011-09-01 15:48:13.000000000 +0200
+++ vtk-5.8.0/CMake/KitCommonPythonWrapBlock.cmake	2011-09-01 15:49:34.000000000 +0200
@@ -80,6 +80,16 @@
   # vtkpython executable in the build tree should have the needed
   # RPATH anyway.
   SET_TARGET_PROPERTIES(vtk${KIT}Python PROPERTIES SKIP_BUILD_RPATH 1)
+
+  set_target_properties(vtk${KIT}PythonD
+      PROPERTIES
+      LINK_INTERFACE_LIBRARIES "${KIT_INTERFACE_LIBRARIES}"
+  )
+
+  set_target_properties(vtk${KIT}Python
+      PROPERTIES
+      LINK_INTERFACE_LIBRARIES ""
+  )
   
   IF(WIN32 OR APPLE)
     TARGET_LINK_LIBRARIES (vtk${KIT}Python ${VTK_PYTHON_LIBRARIES})
Index: vtk-5.8.0/CMake/KitCommonTclWrapBlock.cmake
===================================================================
--- vtk-5.8.0.orig/CMake/KitCommonTclWrapBlock.cmake	2011-09-01 15:48:07.000000000 +0200
+++ vtk-5.8.0/CMake/KitCommonTclWrapBlock.cmake	2011-09-01 15:49:34.000000000 +0200
@@ -4,6 +4,14 @@
 VTK_ADD_LIBRARY(vtk${KIT}TCL ${KitTCL_SRCS} ${Kit_TCL_EXTRA_SRCS})
 SET(KIT_LIBRARY_TARGETS ${KIT_LIBRARY_TARGETS} vtk${KIT}TCL)
 TARGET_LINK_LIBRARIES (vtk${KIT}TCL vtk${KIT} ${KIT_TCL_LIBS})
+
+
+  set_target_properties(vtk${KIT}TCL
+      PROPERTIES
+      LINK_INTERFACE_LIBRARIES "${KIT_INTERFACE_LIBRARIES}"
+  )
+
+
 IF(NOT VTK_INSTALL_NO_LIBRARIES)
   INSTALL(TARGETS vtk${KIT}TCL
     EXPORT ${VTK_INSTALL_EXPORT_NAME}
Index: vtk-5.8.0/Wrapping/Tcl/CMakeLists.txt
===================================================================
--- vtk-5.8.0.orig/Wrapping/Tcl/CMakeLists.txt	2011-09-01 15:48:13.000000000 +0200
+++ vtk-5.8.0/Wrapping/Tcl/CMakeLists.txt	2011-09-01 15:49:34.000000000 +0200
@@ -74,7 +74,7 @@
 
 IF (VTK_USE_RENDERING)
   TARGET_LINK_LIBRARIES(vtk vtkRenderingTCL)
-  TARGET_LINK_LIBRARIES(vtk vtkVolumeRenderingTCL)
+  TARGET_LINK_LIBRARIES(vtk vtkVolumeRenderingTCL vtkVolumeRendering)
   TARGET_LINK_LIBRARIES(vtk vtkHybridTCL)
   TARGET_LINK_LIBRARIES(vtk vtkWidgetsTCL)
 ENDIF (VTK_USE_RENDERING)
@@ -84,7 +84,7 @@
 ENDIF (VTK_USE_PARALLEL)
 
 IF (VTK_USE_GEOVIS)
-  TARGET_LINK_LIBRARIES(vtk vtkGeovisTCL)
+  TARGET_LINK_LIBRARIES(vtk vtkGeovisTCL vtkGeovis)
 ENDIF (VTK_USE_GEOVIS)
 
 IF (VTK_USE_INFOVIS)
@@ -164,16 +164,22 @@
       vtkIOTCL
       vtkParallelTCL
       ${MPI_LIBRARIES}
+      ${VTK_TCL_LIBRARIES}
     )
 
+    IF (VTK_USE_TK)
+       TARGET_LINK_LIBRARIES(pvtk ${VTK_TK_LIBRARIES})
+    ENDIF (VTK_USE_TK)
+
     IF (VTK_USE_RENDERING)
       TARGET_LINK_LIBRARIES(pvtk vtkHybridTCL)
       TARGET_LINK_LIBRARIES(pvtk vtkWidgetsTCL)
-      TARGET_LINK_LIBRARIES(pvtk vtkVolumeRenderingTCL)
+      TARGET_LINK_LIBRARIES(pvtk vtkRenderingTCL)
+      TARGET_LINK_LIBRARIES(pvtk vtkVolumeRenderingTCL vtkVolumeRendering)
     ENDIF (VTK_USE_RENDERING)
 
     IF (VTK_USE_GEOVIS)
-      TARGET_LINK_LIBRARIES(pvtk vtkGeovisTCL)
+      TARGET_LINK_LIBRARIES(pvtk vtkGeovisTCL vtkGeovis)
     ENDIF (VTK_USE_GEOVIS)
 
     IF (VTK_USE_INFOVIS)
Index: vtk-5.8.0/Wrapping/Java/CMakeLists.txt
===================================================================
--- vtk-5.8.0.orig/Wrapping/Java/CMakeLists.txt	2011-09-01 15:48:13.000000000 +0200
+++ vtk-5.8.0/Wrapping/Java/CMakeLists.txt	2011-09-01 15:49:34.000000000 +0200
@@ -216,7 +216,7 @@
         OUTPUTS ${class}
         DEPENDS ${VTK_JAVA_HOME}/vtkPanel.java
         COMMAND ${JAVA_COMPILE}
-        ARGS -classpath ${VTK_JAVA_HOME}/.. -d ${VTK_JAVA_HOME}/.. ${dst}
+        ARGS -source 5 -classpath ${VTK_JAVA_HOME}/.. -d ${VTK_JAVA_HOME}/.. ${dst}
         )
 
       SET(CLASS_FILES ${CLASS_FILES} ${class})
Index: vtk-5.8.0/Utilities/vtk_netcdf.h
===================================================================
--- vtk-5.8.0.orig/Utilities/vtk_netcdf.h	2011-09-01 15:48:11.000000000 +0200
+++ vtk-5.8.0/Utilities/vtk_netcdf.h	2011-09-01 15:49:34.000000000 +0200
@@ -16,6 +16,9 @@
 #define __vtk_netcdf_h
 
 /* Use the netcdf library configured for VTK.  */
-#include <vtknetcdf/netcdf.h>
+//#include <vtknetcdf/netcdf.h>
+
+/* Use Debian's netcdf */
+#include <netcdf.h>
 
 #endif
Index: vtk-5.8.0/Utilities/vtk_netcdfcpp.h
===================================================================
--- vtk-5.8.0.orig/Utilities/vtk_netcdfcpp.h	2011-09-01 15:48:11.000000000 +0200
+++ vtk-5.8.0/Utilities/vtk_netcdfcpp.h	2011-09-01 15:49:34.000000000 +0200
@@ -16,6 +16,9 @@
 #define __vtk_netcdfcpp_h
 
 /* Use the netcdf library configured for VTK.  */
-#include <vtknetcdf/netcdfcpp.h>
+//#include <vtknetcdf/netcdfcpp.h>
+
+#include <netcdfcpp.h>
+
 
 #endif
Index: vtk-5.8.0/Utilities/Cosmo/CMakeLists.txt
===================================================================
--- vtk-5.8.0.orig/Utilities/Cosmo/CMakeLists.txt	2011-09-01 15:48:10.000000000 +0200
+++ vtk-5.8.0/Utilities/Cosmo/CMakeLists.txt	2011-09-01 15:49:34.000000000 +0200
@@ -43,6 +43,13 @@
   SET_TARGET_PROPERTIES(Cosmo PROPERTIES ${VTK_LIBRARY_PROPERTIES})
 ENDIF(VTK_LIBRARY_PROPERTIES)
 
+# Apply user-defined properties to the library targets.
+IF(VTK_LIBRARY_PROPERTIES)
+  SET_TARGET_PROPERTIES(Cosmo PROPERTIES
+    ${VTK_LIBRARY_PROPERTIES}
+    )
+ENDIF(VTK_LIBRARY_PROPERTIES)
+
 IF(NOT VTK_INSTALL_NO_LIBRARIES)
   INSTALL(TARGETS Cosmo
     EXPORT ${VTK_INSTALL_EXPORT_NAME}
Index: vtk-5.8.0/Utilities/VPIC/CMakeLists.txt
===================================================================
--- vtk-5.8.0.orig/Utilities/VPIC/CMakeLists.txt	2011-09-01 15:48:11.000000000 +0200
+++ vtk-5.8.0/Utilities/VPIC/CMakeLists.txt	2011-09-01 15:49:34.000000000 +0200
@@ -25,6 +25,14 @@
 
 VTK_ADD_LIBRARY(VPIC ${VPIC_SOURCES})
 TARGET_LINK_LIBRARIES(VPIC vtksys )
+
+# Apply user-defined properties to the library targets.
+IF(VTK_LIBRARY_PROPERTIES)
+  SET_TARGET_PROPERTIES(VPIC PROPERTIES
+    ${VTK_LIBRARY_PROPERTIES}
+    )
+ENDIF(VTK_LIBRARY_PROPERTIES)
+
 IF(VTK_USE_MPI)
 TARGET_LINK_LIBRARIES(VPIC ${MPI_LIBRARY})
   IF(MPI_EXTRA_LIBRARY)
Index: vtk-5.8.0/Utilities/DICOMParser/DICOMParser.cxx
===================================================================
--- vtk-5.8.0.orig/Utilities/DICOMParser/DICOMParser.cxx	2011-09-01 15:48:10.000000000 +0200
+++ vtk-5.8.0/Utilities/DICOMParser/DICOMParser.cxx	2011-09-01 15:49:34.000000000 +0200
@@ -41,6 +41,7 @@
 
 #include <string.h>
 #include <string>
+#include <cstring>
 
 // Define DEBUG_DICOM to get debug messages sent to dicom_stream::cerr
 // #define DEBUG_DICOM
Index: vtk-5.8.0/Utilities/vtkexodus2/test/CMakeLists.txt
===================================================================
--- vtk-5.8.0.orig/Utilities/vtkexodus2/test/CMakeLists.txt	2011-09-01 15:48:11.000000000 +0200
+++ vtk-5.8.0/Utilities/vtkexodus2/test/CMakeLists.txt	2011-09-01 15:49:34.000000000 +0200
@@ -21,7 +21,7 @@
   )
 
 ADD_EXECUTABLE( ExoIICTests ${ExoIICTests} )
-TARGET_LINK_LIBRARIES( ExoIICTests vtkCommon vtkexoIIc vtkNetCDF )
+TARGET_LINK_LIBRARIES( ExoIICTests vtkCommon vtkexoIIc netcdf )
 
 SET( TestsToRun ${ExoIICTests} )
 REMOVE( TestsToRun ExoIICTests.cxx )
Index: vtk-5.8.0/Rendering/CMakeLists.txt
===================================================================
--- vtk-5.8.0.orig/Rendering/CMakeLists.txt	2011-09-01 15:48:13.000000000 +0200
+++ vtk-5.8.0/Rendering/CMakeLists.txt	2011-09-01 15:49:34.000000000 +0200
@@ -9,9 +9,7 @@
 ENDIF (JAVA_AWT_LIBRARY)
 
 SET(KIT_INTERFACE_LIBRARIES vtkGraphics vtkImaging)
-SET(KIT_LIBS vtkIO vtkftgl
-  ${VTK_FREETYPE_LIBRARIES}
-)
+SET(KIT_LIBS vtkIO vtkftgl)
 #INCLUDE(${VTK_CMAKE_DIR}/vtkTestGL.cmake)
 #INCLUDE(${VTK_CMAKE_DIR}/vtkTestGLX.cmake)
 
@@ -440,9 +438,9 @@
   # path in install names. This workaround fixes the problem by forcing all libraries
   # and executables that depend on vtkRendering to also directly link to Qt libraries.
   IF (APPLE)
-    LIST (APPEND KIT_INTERFACE_LIBRARIES ${QT_LIBRARIES})
+    LIST (APPEND KIT_INTERFACE_LIBRARIES QtGui QtCore)
   ELSE (APPLE)
-    LIST (APPEND KIT_LIBS ${QT_LIBRARIES})
+    LIST (APPEND KIT_LIBS QtGui QtCore)
   ENDIF (APPLE)
 
 ENDIF(VTK_USE_QT)
@@ -538,7 +536,6 @@
     INCLUDE(CheckFunctionExists)
     SET(VTK_SAVE_CMAKE_REQUIRED_LIBRARIES "${CMAKE_REQUIRED_LIBRARIES}")
     SET(CMAKE_REQUIRED_LIBRARIES
-      ${OPENGL_LIBRARIES}
       ${CMAKE_THREAD_LIBS}
       ${CMAKE_REQUIRED_LIBRARIES}
       -lm
@@ -784,7 +781,7 @@
   # Use special interactor for X and Tk.
   IF(VTK_USE_X)
     SET(KitTCL_SRCS ${KitTCL_SRCS} vtkXRenderWindowTclInteractor.cxx)
-    SET(KIT_TCL_LIBS ${KIT_TCL_LIBS} ${X11_LIBRARIES})
+    SET(KIT_TCL_LIBS ${KIT_TCL_LIBS} X11)
   ENDIF(VTK_USE_X)
   IF(VTK_USE_CARBON)
     SET(KIT_TCL_LIBS ${KIT_TCL_LIBS} "-framework Carbon")
@@ -837,7 +834,7 @@
               ${RenderingPythonTkWidgets_SRCS})
   SET(VTK_PYTHONTK_LIBRARIES ${VTK_TK_LIBRARIES})
   IF(VTK_USE_X)
-    SET(VTK_PYTHONTK_LIBRARIES ${VTK_PYTHONTK_LIBRARIES} ${X11_LIBRARIES})
+    SET(VTK_PYTHONTK_LIBRARIES ${VTK_PYTHONTK_LIBRARIES} X11)
   ENDIF(VTK_USE_X)
   IF(VTK_USE_CARBON)
     SET(VTK_PYTHONTK_LIBRARIES ${VTK_PYTHONTK_LIBRARIES} "-framework Carbon")
@@ -874,7 +871,7 @@
   IF (X11_Xt_LIB)
     TARGET_LINK_LIBRARIES(vtk${KIT} ${X11_Xt_LIB})
   ENDIF (X11_Xt_LIB)
-  TARGET_LINK_LIBRARIES(vtk${KIT} ${X11_LIBRARIES})
+  TARGET_LINK_LIBRARIES(vtk${KIT} X11)
   IF (VTK_USE_TK)
     # Definitely needed in case we are linking against a Tcl/Tk 8.5 static,
     # which by default seems to be missing Xss and Xft. It can not just be
@@ -883,12 +880,12 @@
     FIND_LIBRARY(X11_Xscreensaver_LIB Xss ${X11_LIB_SEARCH_PATH})
     MARK_AS_ADVANCED(X11_Xscreensaver_LIB)
     IF(X11_Xscreensaver_LIB)
-      TARGET_LINK_LIBRARIES(vtk${KIT} ${X11_Xscreensaver_LIB})
+#      TARGET_LINK_LIBRARIES(vtk${KIT} ${X11_Xscreensaver_LIB})
     ENDIF(X11_Xscreensaver_LIB)
     FIND_LIBRARY(X11_Xft_LIB Xft ${X11_LIB_SEARCH_PATH})
     MARK_AS_ADVANCED(X11_Xft_LIB)
     IF(X11_Xft_LIB)
-      TARGET_LINK_LIBRARIES(vtk${KIT} ${X11_Xft_LIB})
+#      TARGET_LINK_LIBRARIES(vtk${KIT} ${X11_Xft_LIB})
     ENDIF(X11_Xft_LIB)
     IF(APPLE)
       FIND_LIBRARY(X11_fontconfig_LIB fontconfig ${X11_LIB_SEARCH_PATH})
Index: vtk-5.8.0/Parallel/CMakeLists.txt
===================================================================
--- vtk-5.8.0.orig/Parallel/CMakeLists.txt	2011-09-01 15:48:13.000000000 +0200
+++ vtk-5.8.0/Parallel/CMakeLists.txt	2011-09-01 15:49:34.000000000 +0200
@@ -205,7 +205,7 @@
     MESSAGE("Could not find the required MPI libraries")
   ENDIF (MPI_LIBRARY)   
   IF (MPI_EXTRA_LIBRARY)   
-    SET(KIT_LIBS ${KIT_LIBS} "${MPI_EXTRA_LIBRARY}")   
+    SET(KIT_LIBS ${KIT_LIBS} "${MPI_LIBRARY}")   
   ENDIF (MPI_EXTRA_LIBRARY) 
 ENDIF (VTK_USE_MPI)
 
@@ -240,6 +240,8 @@
 ENDFOREACH(file)
 ENDIF(VTK_USE_RENDERING)
 
+
+
 #-----------------------------------------------------------------------------
 # Include CMake code common to all kits.
 INCLUDE(${VTK_CMAKE_DIR}/KitCommonBlock.cmake)
Index: vtk-5.8.0/Charts/CMakeLists.txt
===================================================================
--- vtk-5.8.0.orig/Charts/CMakeLists.txt	2011-09-01 15:48:07.000000000 +0200
+++ vtk-5.8.0/Charts/CMakeLists.txt	2011-09-01 15:49:34.000000000 +0200
@@ -98,9 +98,9 @@
   SET(QT_DONT_USE_QTGUI)
   INCLUDE(${QT_USE_FILE})
   IF (APPLE)
-    LIST (APPEND KIT_INTERFACE_LIBRARIES ${QT_LIBRARIES})
+    LIST (APPEND KIT_INTERFACE_LIBRARIES QtGui QtCore )
   ELSE (APPLE)
-    LIST (APPEND KIT_LIBS ${QT_LIBRARIES})
+    LIST (APPEND KIT_LIBS QtGui QtCore )
   ENDIF (APPLE)
 ENDIF(VTK_USE_QT)
 
Index: vtk-5.8.0/IO/CMakeLists.txt
===================================================================
--- vtk-5.8.0.orig/IO/CMakeLists.txt	2011-09-01 15:48:13.000000000 +0200
+++ vtk-5.8.0/IO/CMakeLists.txt	2011-09-01 15:49:34.000000000 +0200
@@ -18,9 +18,9 @@
 SET(KIT_PYTHON_LIBS vtkFilteringPythonD)
 SET(KIT_JAVA_LIBS vtkFilteringJava)
 SET(KIT_INTERFACE_LIBRARIES vtkFiltering)
-SET(KIT_LIBS vtkDICOMParser vtkNetCDF vtkNetCDF_cxx
+SET(KIT_LIBS vtkDICOMParser netcdf netcdf_c++
   ${_VTK_METAIO_LIB} vtksqlite
-  ${VTK_PNG_LIBRARIES} ${VTK_ZLIB_LIBRARIES} ${VTK_JPEG_LIBRARIES}
+  ${VTK_PNG_LIBRARIES} ${VTK_JPEG_LIBRARIES}
   ${VTK_TIFF_LIBRARIES} ${VTK_EXPAT_LIBRARIES} ${VTK_OGGTHEORA_LIBRARIES}
   ${KWSYS_NAMESPACE})
 

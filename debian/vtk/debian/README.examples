There are examples written in C++, Java, Python and Tcl.

The Java ones won't be of much use to Debian users until
the Debian vtk maintainer understands how to make Java packages.

They live under /usr/share/vtk
The example data is under /usr/share/VTKData
when the vtkdata package is installed.

The Python and Tcl examples have relative paths to
the data. You can either cd to the directory with
the example to run it, or most (all?) examples will
use the VTK_DATA_ROOT environment variable.

export VTK_DATA_ROOT=/usr/share/VTKData

     ***      ***       ***
For example, to compile the Cone4 Cxx example program yourself, try:

g++ -I/usr/include/vtk-5.8 -o Cone /usr/share/vtk/Tutorial/Step4/Cxx/Cone4.cxx /usr/lib/libvtkGraphics.so  /usr/lib/libvtkCommon.so -L /usr/X11R6/lib -lGL -lXt -lX11 /usr/lib/libvtkImaging.so /usr/lib/libvtkRendering.so /usr/lib/libvtkFiltering.so

And then run it:

./Cone

     ***      ***       ***
CMake: VTK applications often use cmake. For an example try:

 $ mkdir ~/tmp
 $ cd ~/tmp
 $ cmake /usr/share/vtk/Tutorial/Step1/Cxx/
 $ make
 $ ./Cone

     ***      ***       ***
The Java examples:

 $ mkdir ~/tmp
 $ cp /usr/share/vtk/Tutorial/Step1/Java/Cone.java ~/tmp/
 $ cd ~/tmp
 $ javac -classpath /usr/share/java/vtk.jar Cone.java
 $ export CLASSPATH=/usr/share/java/vtk.jar:.
 ### replace i386 in the following line if necessary
 $ export LD_LIBRARY_PATH=/usr/lib/jvm/default-java/jre/lib/i386/xawt/:$LD_LIBRARY_PATH
 $ java Cone

     ***      ***       ***
The Python ones are easy, just run (to pick one):

/usr/share/vtk/Tutorial/Step1/Python/Cone.py

VTK is built against the default Debian python version. Try:
 $ python
Python 2.6.5+ (release26-maint, Jul  1 2010, 00:47:18)
[GCC 4.4.4] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import vtk
>>> 

     ***      ***       ***
The Tcl examples:

vtk /usr/share/vtk/Tutorial/Step1/Tcl/Cone.tcl

VTK_DATA_ROOT=/usr/share/VTKData vtk /usr/share/vtk/IO/Tcl/flamingo.tcl

Some Tcl examples have relative paths built into the scripts, to
run them cd to the example directory first.

cd /usr/share/vtk/Rendering/Tcl
vtk keyBottle.tcl

VTK is built against tcl8.5, and extends it. Try:
 $ tclsh
 % package require vtk
 5.8
 %

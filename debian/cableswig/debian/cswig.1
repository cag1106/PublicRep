.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
.TH CSWIG "1" "March 2006" "cswig " "User Commands"
.SH NAME
cswig \- generate Python and Tcl wrappers from C++ code.
.SH SYNOPSIS
.B cswig
.RI [ options ] " files" ...
.SH DESCRIPTION
CableSwig (cswig) is used to create interfaces (i.e. "wrappers") to
interpreted languages such as Tcl and Python. It was created to
produce wrappers for ITK because the toolkit uses C++ structures that
SWIG cannot parse (deeply nested template instantiations). CableSwig
is a combination tool that uses GCC_XML as the c++ parser. The input
files are Cable style input files. The XML produced from the
Cable/GCC_XML input files are then parsed and feed into a modified
version of SWIG. SWIG is a software development tool that connects
programs written in C and C++ with a variety of high-level programming
languages. It is used to generate the language bindings to the target
language. Currently, Tcl and Python are supported.
.SS "Target Language Options:"
.HP
\fB\-chicken\fR        \- Generate CHICKEN wrappers
.HP
\fB\-csharp\fR         \- Generate C# wrappers
.HP
\fB\-guile\fR          \- Generate Guile wrappers
.HP
\fB\-java\fR           \- Generate Java wrappers
.HP
\fB\-mzscheme\fR       \- Generate Mzscheme wrappers
.HP
\fB\-ocaml\fR          \- Generate Ocaml wrappers
.HP
\fB\-perl\fR           \- Generate Perl wrappers
.HP
\fB\-php\fR            \- Generate PHP wrappers
.HP
\fB\-pike\fR           \- Generate Pike wrappers
.HP
\fB\-python\fR         \- Generate Python wrappers
.HP
\fB\-ruby\fR           \- Generate Ruby wrappers
.HP
\fB\-sexp\fR           \- Generate Lisp S\-Expressions wrappers
.HP
\fB\-tcl\fR            \- Generate Tcl wrappers
.HP
\fB\-xml\fR            \- Generate XML wrappers
.PP
General Options
.HP
\fB\-nocable\fR        \- Run in regular swig mode.
.HP
\fB\-Cindex\fR file.mdx \- Read a cable master index file
.HP
\fB\-depend\fR file.cmake \- Specify a cmake depend file
.HP
\fB\-c\fR++            \- Enable C++ processing
.HP
\fB\-co\fR             \- Check a file out of the SWIG library
.HP
\fB\-dirprot\fR        \- Turn on wrapping of protected members for director classes
.HP
\fB\-D\fR<symbol>      \- Define a symbol <symbol> (for conditional compilation)
.HP
\fB\-E\fR              \- Preprocess only, does not generate wrapper code
.HP
\fB\-fcompact\fR       \- Compile in compact mode
.HP
\fB\-fvirtual\fR       \- Compile in virtual elimination mode
.HP
\fB\-Fstandard\fR      \- Display error/warning messages in commonly used format
.HP
\fB\-Fmicrosoft\fR     \- Display error/warning messages in Microsoft format
.HP
\fB\-help\fR           \- This output
.HP
\fB\-I\fR<dir>         \- Look for SWIG files in <dir>
.HP
\fB\-ignoremissing\fR  \- Ignore missing include files
.HP
\fB\-importall\fR      \- Follow all #include statements as imports
.HP
\fB\-includeall\fR     \- Follow all #include statements
.HP
\fB\-l\fR<ifile>       \- Include SWIG library file <ifile>
.HP
\fB\-M\fR              \- List all dependencies
.HP
\fB\-MM\fR             \- List dependencies, but omit files in SWIG library
.HP
\fB\-makedefault\fR    \- Create default constructors/destructors (the default)
.HP
\fB\-module\fR <name>  \- Set module name to <name>
.HP
\fB\-nocontract\fR     \- Turn off contract checking
.HP
\fB\-nodefault\fR      \- Do not generate constructors/destructors
.HP
\fB\-nodirprot\fR      \- Do not wrap director protected members
.HP
\fB\-noexcept\fR       \- Do not wrap exception specifiers
.HP
\fB\-noextern\fR       \- Do not generate extern declarations
.HP
\fB\-noruntime\fR      \- Do not include SWIG runtime code
.HP
\fB\-o\fR <outfile>    \- Set name of the output file to <outfile>
.HP
\fB\-outdir\fR <dir>   \- Set language specific files output directory
.HP
\fB\-runtime\fR        \- Make the runtime support code globally visible.
.HP
\fB\-small\fR          \- Compile in virtual elimination & compact mode
.HP
\fB\-swiglib\fR        \- Report location of SWIG library and exit
.HP
\fB\-v\fR              \- Run in verbose mode
.HP
\fB\-version\fR        \- Print SWIG version number
.HP
\fB\-Wall\fR           \- Enable all warning messages
.HP
\fB\-Wallkw\fR         \- Enable keyword warnings for all the supported languages
.HP
\fB\-Werror\fR         \- Force to treat warnings as errors
.TP
\fB\-w\fR<list>        \- Suppress/add warning messages by code.
Use ',' as separator and the +/\- signs as follows
.IP
\fB\-w\fR+321,401,\-402
.IP
where code 321(+) is added, and 401(no sign) and 402(\-)
are suppressed. See documentation for code meanings.
.PP
Tcl 8 Options (available with \fB\-tcl\fR)
.HP
\fB\-itcl\fR           \- Enable ITcl support
.HP
\fB\-ldflags\fR        \- Print runtime libraries to link with
.HP
\fB\-nosafe\fR         \- Leave out SafeInit module function.
.HP
\fB\-prefix\fR <name>  \- Set a prefix <name> to be prepended to all names
.HP
\fB\-namespace\fR      \- Build module into a Tcl 8 namespace
.HP
\fB\-pkgversion\fR     \- Set package version
.PP
Note: 'cswig \-<lang> \fB\-help\fR' displays options for a specific target language.
.PP
SWIG Version 1.3.20
Copyright (c) 1995\-1998
University of Utah and the Regents of the University of California
Copyright (c) 1998\-2003
University of Chicago
Compiled with g++ [Linux\-2.6.15\-1\-k7\-gcc]
.PP
Please see http://www.swig.org for reporting bugs and further information
.SH "SEE ALSO"
.BR cableidx (1),
.BR gccxml (1).
